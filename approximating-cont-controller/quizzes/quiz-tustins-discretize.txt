MC	When discretizing a continuous-time model of the PLANT, we typically use zero-order-hold sampling, since our control loop most often contains a zero-order-hold block between the controller algorithm and the plant. The input signal to the plant is then a stair-case signal. However, when discretizing a controller designed in continous-time zero-order-hold istypically NOT used. Why?	We like some variation	incorrect	Because Nyquist told us not to	incorrect	Because ZOH sampling leads to a less stable system	incorrect	Because the input signal to the controller does not look like a stair-case signal	correct
MC	When discretizing a continuous-time system using the bilinear transform (Tustin's approximation), the positive imaginary axis in the s-plane is mapped to:	The unit circle in the z-plane	incorrect	The upper half of the unit circle in the z-plane	correct	The lower half of the unit circle in the z-plane	incorrect
MC	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script> Using Tustin's approximation leads to a warping of the frequency axis. The warping is given by equation (8.7) in the textbook \[\omega_d = \frac{2}{h} \tan^{-1} \left( \frac{\omega_c h}{2} \right),\] where \(\omega_c\) is the continuous-time frequency, and \(\omega_d\) is the corresponding frequency after the warping. For instance, if we have designed a continuous-time filter in the s-domain to have a gain with a sharp valley at the frequency \(\omega_0 = 2\)rad/s (a notch filter), and we discretize the filter using Tustin with sampling period \(h=0.4\)s, then the discrete-time filter will have a valley not at 2 rad/s but at 1.90 rad/s. See the Bode plot below <p><img src="http://alfkjartan.github.io/images/notch-bode.png" width="600"></p>What is the warped frequency of 2 rad/s if we discretize with \(h=0.2\)s instead?	1.974 rad/s	correct	1.83 rad/s	incorrect	2.1 rad/s	incorrect	2.0 rad/s	incorrect
MC	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>A time-delay of \(T\) in the Laplace domain is represented by the transfer function \[ \mathrm{e}^{-sT}. \] We can think of it as a block which has an output signal which is a delayed version of the input signal. If the delay is \(T=1\) second, and we pass in the signal \( u(t) = \sin \pi t \), what will be the output of the delay block?	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(y(t)=\cos \pi t \)	incorrect	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(y(t) = -\cos \pi t\)	incorrect	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(y(t) = -\sin \pi t\)	correct	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(y(t)=\sin \pi t\)	incorrect 
MC	The Tustin approximation will always transform a stable continous-time system into a stable discrete-time system. This is not the case for the forward difference approximation (Euler forward): A stable continuous-time system could be transformed into an unstable discrete-time system. Why is this so?	The forward difference maps the left half plane of the s-plane onto the right half plane of the z-plane	incorrect	The forward difference maps the left half plane of the s-plane onto the unit disk in the z-plane	incorrect	The forward difference maps the left half plane of the s-plane onto the plane left of z=1 in the z-plane	correct	The forward difference maps the left half plane of the s-plane onto the left half plane of the z-plane	incorrect
SR	Please list 2-4 things you learned from the material
SR	Please list 2-4 things the you thought were difficult to understand in the material
