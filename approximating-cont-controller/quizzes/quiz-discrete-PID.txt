MC	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>In practice, the derivative part of the PID controller is not a pure derivation. Instead the transfer function \(sT_d\) is approximated by \[sT_d \approx \frac{sT_s}{1 + sT_d/N}\] where \(N\) is a number between 3 and 10, typically. Why is this approximation used in practice?	It is easier to implement on a computer	incorrect	It gives a more stable closed-loop system	incorrect	It limits the gain at high frequencies	correct	Because &Aring;str&ouml;m said so	incorrect
MC	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>A PID algorithm much used in practice is \[U(s) = K \left( bU_c(s) - Y(s) + \frac{1}{sT_i}\big(U_c(s) - Y(s)\big) - \frac{sT_d}{1 + sT_d/N} Y(s)\right).\] As can be seen, the derivative part only acts on the output feedback signal \(y(t)\) and not on the command signal \(u_c(t)\). Why is it a good idea to do like this?	The command signal often has abrupt changes	correct	The closed-loop system will be less sensitive to measurement noise	incorrect	The closed-loop system will be more stable	incorrect	It is easier to implement on a computer	incorrect
MC	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>Table 8.1 in the textbook shows the coefficients of the pulse transfer operator for the discretized PID controller.<p><img src="http://alfkjartan.github.io/images/fig8-1.png" width="400"></p>The controller is written \[R(q)u(kh) = T(q)u_c(kh) - S(q)y(kh)\], and we are considering a PI-controller. For a PI-controller \(R(q)=q-1\), and \(T(q)=t_0q + t_1\) and \(S(q) = s_0q + s_1\). Using the special discretization discussed in the text we get \(T(q) = K\left(bq - (b-\frac{h}{T_i})\right)\). But what is \(S(q)\)?	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(S(q) = K\left(q - \frac{h}{T_i}\right)\)	correct	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(S(q) = q-\frac{h}{T_i}\)	incorrect	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(S(q) = K\left(b+\frac{h}{T_i}\right)\)	incorrect
SR	In your own words, what causes the problem of integrator windup?	Integrator windup occurs when the controller has integral action in combination with an actuator that saturates and limits the amplitude of the input signal to the plant. The plant then cannot follow the reference signal, so the control error increases which further increases the integral of the error. 
MC	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>The Step-response Method and the Ultimate-sensitivity Method are two methods for tuning a PID controller. When using the ultimate sensitivity method, the dynamics of the system is described by the parameters:	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>\(L\) the apparent deadtime, and \(R\) the steepest slope of the step response	incorrect	<script src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>The gain \(K_u\) for which proportional control is at the stability limit, and \(T_u\) the period of oscillations at the stability limit	correct
SR	Please list 2-4 things you learned from the material
SR	Please list 2-4 things the you thought were difficult to understand in the material
