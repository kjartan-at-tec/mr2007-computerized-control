#+OPTIONS: toc:nil num:nil
#+LaTeX_CLASS: koma-article 
#+LaTex_HEADER: \usepackage{khpreamble}
#+LaTex_HEADER: \usepackage{subfigure}

#+title: Harddisk drive control design exercise (Å&W ex 1.2)
# #+date: 2018-08-15

# * 2-dof controller for the hardisk drive arm (Å&W ex 1.2)

** Notes							   :noexport:
   What are the units of all the signals and  parameters?
   - \theta(t) :: angle [rad]
   - u(t) :: voltage [V]
   - s :: frequency [s^{-1}] 
   - J :: moment of inertia [kg*m^2]
   - k_d :: must have [k_d/(Js^2)] = [rad/V], so [k_d] = [rad/V*kg*m^2*s^{-2}] 
	    Note that [m*kg (m/s^2)] = [Nm], so
	    [k_d] = [(rad)*(Nm/V)]
   - beta :: [V/rad]
   - a,b :: frequency [s^{-1}]
   - K :: [volt/rad]
** The closed-loop transfer functions
#+BEGIN_LaTeX
  \begin{center}
  \begin{tikzpicture}
  \tikzset{node distance=2cm, 
      block/.style={rectangle, draw, minimum height=15mm, minimum width=20mm},
      sumnode/.style={circle, draw, inner sep=2pt}        
  }

    \node[coordinate] (input) {};
    \node[block, right of=input] (TR) {$F_f(s)=\beta$};
    \node[sumnode, right of=TR, node distance=30mm] (sum) {$\sum$};
    \node[block,right of=sum, node distance=30mm] (plant) {$G(s)=\frac{B(s)}{A(s)}=\frac{k_d}{Js^2}$};
    \node[sumnode, right of=plant, node distance=30mm] (sumdist) {$\sum$};
    \node[coordinate, above of=sumdist, node distance=15mm] (dist) {};
    \node[coordinate, right of=sumdist, node distance=15mm] (measure) {};
    \node[coordinate, right of=measure, node distance=10mm] (output) {};
    \node[sumnode,below of=measure, node distance=25mm] (sumnoise) {$\sum$};
    \node[coordinate, right of=sumnoise, node distance=15mm] (noise) {};
    \node[block,left of=sumnoise, node distance=30mm] (SR) {$F_b(s) = \frac{S_b(s)}{R_b(s)}= K\frac{s+b}{s+a}$};

    \draw[->] (input) -- node[above, pos=0.2] {$\theta_{ref}(t)$} (TR);
    \draw[->] (TR) -- node[above] {$u_1(t)$} (sum);
    \draw[->] (sum) -- node[above] {$u(t)$} (plant);
    \draw[->] (plant) -- (sumdist);
    \draw[->] (dist) -- node[at start, right] {$v(t)$} (sumdist);
    \draw[->] (sumdist) -- node[at end, above] {$\theta(t)$} (output);
    \draw[->] (measure) -- (sumnoise);
    \draw[->] (noise) -- node[at start, above] {$n$} (sumnoise);
    \draw[->] (sumnoise) -- (SR);
    \draw[->] (SR) -| (sum) node[right, pos=0.8] {$u_2(t)$} node[left, pos=0.96] {$-$};
  \end{tikzpicture}
  \end{center}

#+END_LaTeX

  1. *Show that the closed-loop system from the three input signals $\theta_{ref}(t)$, $v(t)$ and $n(t)$ is given by*
     \[ \Theta(s) = \frac{G(s)F_f(s)}{1 + G(s)F_b(s)}\Theta_{ref}(s) + \underbrace{\frac{1}{1 + G(s)F_b(s)}}_{S(s)}V(s) - \underbrace{\frac{G(s)F_b(s)}{1 + G(s)F_b(s)}}_{T(s)}N(s) \]
  2. *Show that \( S(s) + T(s) = 1\)*

** The characteristic equation
   *Show that the characteristic equation for the closed-loop system is*
   \begin{equation}
   A(s)R_b(s) + B(s)S_b(s) = s^3 + as^2 + \frac{Kk_d}{J}s + \frac{Kk_d}{J}b = 0.
   \label{eq:chareq}
   \end{equation}

#   \vspace*{2cm}

** Desired closed-loop poles
   The closed-loop system is of order three, so there are three poles to specify. Assume that the specification on the speed of the response of the closed-loop system requires the poles to be at a distance of \(\omega_0\) from the origin. *Sketch suitable positions of the three poles in the s-plane below.*
#+BEGIN_LaTeX
  \begin{center}
  \begin{tikzpicture}

    \draw[->] (-3,0) to (3,0) node[below] {Re};
    \draw[->] (0,-3) to (0,3) node[right] {Im};

    \draw[thin,dashed] (0,0) circle [radius=2cm];

    %\draw[->, dashed] (0,0) -- node[above right, pos=0.8] {$r=\omega_0$} (140:2) ;

    \node at (-2,-0.3) {$-\omega_0$};
    \node at (0.4,2) {$i\omega_0$};
    \node at (0.4,-2) {$-i\omega_0$};
  \end{tikzpicture}
  \end{center}

#+END_LaTeX

*** Notes							   :noexport:
The poles
   \[ p_1 = -\omega_0, \quad p_2 = \omega_0(-0.5 + i\frac{\sqrt{3}}{2}) \quad p_2 = \omega_0(-0.5 - i\frac{\sqrt{3}}{2})\] give a good time-response. Show that the desired poles correspond to the characteristic polynomial
   \begin{equation}
   s^3 + 2\omega_0s^2 + 2\omega_0^2s + \omega_0^3.
   \label{eq:desired}
   \end{equation}

   \vspace*{2cm}

** Determine the controller parameters
   A suitable set of three closed-loop poles is obtained as the roots of the characteristic polynomial
   \begin{equation}
   s^3 + 2\omega_0s^2 + 2\omega_0^2s + \omega_0^3.
   \label{eq:desired}
   \end{equation}
   By comparing the characteristic polynomial in \eqref{eq:chareq} to the desired polynomial in \eqref{eq:desired}, we can determine the controller parameters. *Find the parameters of the feedback controller.*
   \begin{flalign*}
   a &= & \\[3mm]
   b &= \\[3mm]
   K &= 
   \end{flalign*}

#   a &= 2\omega_0 &\\
#   K &= \frac{2J\omega_0^2}{k_d}\\
#   b &= \frac{\omega_0}{2}.

** Root locus
   Consider the closed-loop characteristic equation \(1 + K\frac{s+b}{s^2(s+a)} = 0\) using the values for $a$ and $b$ found above (but leave $K>0$ undetermined). *Draw the root locus w.r.t the controller gain $K$.*
#+BEGIN_LaTeX
  \begin{center}
   \includegraphics[]{../figures/implane-rlocus}
  \end{center}
#+END_LaTeX
   *Is \(F_b(s) = K \frac{s+b}{s+a}\) a \emph{lead-compensator} or a \emph{lag-compensator}?*

** The feedback filter \(F_b(i\omega)\)				   :noexport:
   Sketch the *bode diagram* of \(F_b(i\omega)= \) 
# = \frac{2J\omega_0^2}{k_d} \cdot \frac{i\omega +0.5\omega_0}{i\omega+2\omega_0}\)
   #+BEGIN_LaTeX
   \begin{center}
   \includegraphics[]{../figures/bode-empty-Fb}
   \end{center}
   #+END_LaTeX

** The loop gain
   Show that the loop gain of the closed-loop system is
   \[G_o(s) = G(s)F_b(s) = \frac{\omega_0^2(2s + \omega_0)}{s^2(s+2\omega_0)}.\]
   
   *Determine and mark the (amplitude) crossover frequency $\omega_c$, the phase-crossover frequency $\omega_p$, the phase margin $\varphi_m$ and the gain margin $A_m$ in the bodeplot of the loop gain below.*
   #+BEGIN_LaTeX
   \begin{center}
   \includegraphics[]{../figures/bode-loop-gain}
   \end{center}

   #+END_LaTeX

***  Skip this							   :noexport:
\vspace*{1cm}
   Calculate
     \begin{flalign*}
       |G_o(i\omega_0)| &= \lvert \frac{\omega_0^2(i2\omega_0 + \omega_0)}{(i\omega_0)^2(i\omega_0 + \omega_0)}\rvert = ? &\\[1cm]
       \arg G_o(i\omega_0) &= \arg \omega_0^2 + \arg (i2\omega_0 + \omega_0) - \arg (i\omega_0)^2 - \arg (i\omega_0 + \omega_0) = ?
     \end{flalign*}


** The set-point weighting
   The closed-loop transfer function from reference signal to output is 
   \[ G_c(s) = \frac{G(s)F_f(s)}{1 + G(s)F_b(s)} = \frac{\beta \frac{k_d/J}{s^2}}{ 1 + \frac{k_d/J}{s^2} K \frac{s+b}{s+a}} = \frac{\beta \frac{k_d}{J} (s+a)}{s^2(s+a) + K\frac{k_d}{J}(s+b)}.\]
   Determine $\beta$ such that the closed-loop transfer function has unit static gain (\(G_c(0)=1\)).

# \beta = K b/a

** Discretizing the controller
The control law is 
\begin{align*} 
U(s) &= F_f(s)\Theta_{ref}(s) - F_b(s)\Theta(s)\\
 &= \underbrace{\beta\Theta_{ref}(s)}_{U_1(s)} - \underbrace{K\frac{s + b}{s+a} \Theta(s)}_{U_2(s)}
\end{align*}
which means that it an be written in the time-domain as \(u(t) = u_1(t) - u_2(t)\), where
\begin{equation}
  u_1(t) = \beta \theta_{ref}(t),
\end{equation}
and the output feedback $u_2(t)$ is 
\[U_2(s) = K \cdot \frac{s + b}{s + a} \Theta(s)\]
which be written as the ODE 
$$\dot{u}_2 + a u_2 =  K (\dot{\theta} + b \theta).$$
The term \(u_1(t)\) is straightforward to discretize as
$$ u_1(t) = \beta \theta_{ref}(t) \quad \Rightarrow \quad u_1(kh) = \beta \theta_{ref}(kh). $$
The second term $u_2(t)$ requires a discrete approximation of the derivative. There are a number of different alternatives. The simplest is the Euler forward approximation
$$ \dot{x}(t) = \frac{dx}{dt} \approx \frac{x(t+h) - x(t)}{h}, $$
where $h$ is the sampling interval. 
*Show that the Euler forward approximation gives* 
$$ u_2(kh+h) = ( 1 - ah) u_2(kh) + K \Big(\theta(kh+h) + (1-bh)\theta(kh)\Big). $$
*For which values of $h$ is the discretized feedback controller a stable system?*

*** Pulse-transfer operator					   :noexport:
Writing the result using the shift operator $\operatorname{q}$ gives
$$ \operatorname{q}u_2(kh) - (1-ah)u_2(kh) = - K \Big(\operatorname{q}\theta(kh) - (1-bh)\theta(kh)\Big). $$
$$ \Big(\operatorname{q} - (1-ah)\Big) u_2(kh) = - K \Big(\operatorname{q} - (1-bh)\Big)\theta(kh). $$
$$ u_2(kh) = -K \frac{\operatorname{q} - (1-bh)}{\operatorname{q} - (1-ah)} \theta(kh), $$
\vspace*{2cm}



# *** Write som lines of matlab code that implements the discretized controller
    
# You can assume that the previous controller outputs are stored in the variable =u2_prev=, and that the current and previous disk arm angle are stored in the variables  =theta= and =theta_prev=.
 

